.TH "sgToggle: Togglebutton" 3 "5 Sep 2006" "Version 2.0.0rc4" "libsgui" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sgToggle: Togglebutton \- 
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBsgToggle\fP"
.br
.RI "\fIA specialised structure for a toggle widget. \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBsgToggle\fP(w)   (w)->data.toggle"
.br
.RI "\fIA macro to access the specialised toggle structure. \fP"
.ti -1c
.RI "#define \fBsgGetToggleState\fP(w)   (!!(\fBsgToggle\fP(w)->draw & SG_DRAW_INVERSE))"
.br
.RI "\fIa macro to access the toggle state \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBsgToggle\fP \fBsgToggle\fP"
.br
.RI "\fIData type for toggle specific storage. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewToggleSplitted\fP (\fBsgWidget\fP *based, \fBsgEdge\fP edge, int pixels, const char *caption)"
.br
.RI "\fICreates a new toggle widget by splitting another. \fP"
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewToggleGrouped\fP (\fBsgWidget\fP *group, \fBsgEdge\fP edge, \fBsgAlign\fP align, Uint16 w, Uint16 h, const char *caption)"
.br
.RI "\fICreates a new toggle widget and adds it to a group. \fP"
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewToggleRect\fP (\fBsgWidget\fP *parent, SDL_Rect rect, const char *caption)"
.br
.RI "\fICreates a new toggle widget from a rectangle. \fP"
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewToggle\fP (\fBsgWidget\fP *parent, Sint16 x, Sint16 y, Uint16 w, Uint16 h, const char *caption)"
.br
.RI "\fICreates a new toggle widget. \fP"
.ti -1c
.RI "void \fBsgRecalcToggle\fP (\fBsgWidget\fP *toggle)"
.br
.RI "\fIRecalculates internal toggle rectangles. \fP"
.ti -1c
.RI "void \fBsgRedrawToggle\fP (\fBsgWidget\fP *toggle)"
.br
.RI "\fIRedraws toggle widget. \fP"
.ti -1c
.RI "int \fBsgHandleToggleEvent\fP (\fBsgWidget\fP *toggle, SDL_Event *event)"
.br
.RI "\fIHandles an incoming event for a toggle widget. \fP"
.ti -1c
.RI "int \fBsgSetToggleState\fP (\fBsgWidget\fP *toggle, int enabled)"
.br
.RI "\fISets the state of a toggle. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBsgWidgetType\fP \fBsgToggleType\fP"
.br
.RI "\fIConfiguration and initial methods of the toggle widget. \fP"
.ti -1c
.RI "\fBsgWidgetType\fP \fBsgToggleType\fP"
.br
.RI "\fIConfiguration and initial methods of the toggle widget. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBsgWidget\fP * sgNewToggleSplitted (\fBsgWidget\fP * based, \fBsgEdge\fP edge, int pixels, const char * caption)"
.PP
Creates a new toggle widget by splitting another. 
.PP
\fBParameters:\fP
.RS 4
\fIbased\fP widget which we'll split 
.br
\fIedge\fP at which edge «based» will be splitted 
.br
\fIpixels\fP how many pixels to split off 
.br
\fIcaption\fP initial toggle text
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created toggle or NULL on error.
.RE
.PP

.SS "\fBsgWidget\fP * sgNewToggleGrouped (\fBsgWidget\fP * group, \fBsgEdge\fP edge, \fBsgAlign\fP align, Uint16 w, Uint16 h, const char * caption)"
.PP
Creates a new toggle widget and adds it to a group. 
.PP
\fBParameters:\fP
.RS 4
\fIgroup\fP group the editbox will be added to 
.br
\fIedge\fP at which edge «group» will be splitted 
.br
\fIalign\fP alignment of the toggle inside the group 
.br
\fIw\fP width of the toggle 
.br
\fIh\fP height of the toggle 
.br
\fIcaption\fP initial toggle text
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created toggle or NULL on error.
.RE
.PP

.SS "\fBsgWidget\fP * sgNewToggleRect (\fBsgWidget\fP * parent, SDL_Rect rect, const char * caption)"
.PP
Creates a new toggle widget from a rectangle. 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP parent widget the toggle will be added to 
.br
\fIrect\fP dimensions of the new toggle 
.br
\fIcaption\fP initial toggle text
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created toggle or NULL on error.
.RE
.PP

.SS "\fBsgWidget\fP * sgNewToggle (\fBsgWidget\fP * parent, Sint16 x, Sint16 y, Uint16 w, Uint16 h, const char * caption)"
.PP
Creates a new toggle widget. 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP widget which will contain the toggle 
.br
\fIx\fP x-position of the toggle relative to the parent 
.br
\fIy\fP y-position of the toggle relative to the parent 
.br
\fIw\fP width of the toggle 
.br
\fIh\fP height of the toggle 
.br
\fIcaption\fP initial toggle text
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created toggle or NULL on error
.RE
.PP

.SS "void sgRecalcToggle (\fBsgWidget\fP * toggle)"
.PP
Recalculates internal toggle rectangles. 
.PP
\fBParameters:\fP
.RS 4
\fItoggle\fP toggle to recalculate
.RE
.PP

.SS "void sgRedrawToggle (\fBsgWidget\fP * toggle)"
.PP
Redraws toggle widget. 
.PP
\fBParameters:\fP
.RS 4
\fItoggle\fP toggle widget to redraw
.RE
.PP

.SS "int sgHandleToggleEvent (\fBsgWidget\fP * toggle, SDL_Event * event)"
.PP
Handles an incoming event for a toggle widget. 
.PP
\fBParameters:\fP
.RS 4
\fItoggle\fP toggle widget which receives the event 
.br
\fIevent\fP an SDL_Event structure from SDL_PollEvent()
.RE
.PP
\fBReturns:\fP
.RS 4
1 if some action has taken place, 0 otherwise
.RE
.PP

.SS "int sgSetToggleState (\fBsgWidget\fP * toggle, int enabled)"
.PP
Sets the state of a toggle. 
.PP
\fBParameters:\fP
.RS 4
\fItoggle\fP the toggle widget which will be changed 
.br
\fIenabled\fP new state of the toggle
.RE
.PP
\fBReturns:\fP
.RS 4
Returns 1 when the value has changed, 0 otherwise
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "\fBsgWidgetType\fP \fBsgToggleType\fP"
.PP
\fBInitial value:\fP
.PP
.nf

{
  .name = 'sgToggle',
  .size = sizeof(struct sgToggle),
  .methods =
  {
    .recalc = sgRecalcToggle,
    .redraw = sgRedrawToggle,
    .handler = sgHandleToggleEvent,
    .blit = sgBlitWidget
  }
}
.fi
Configuration and initial methods of the toggle widget. 
.PP

