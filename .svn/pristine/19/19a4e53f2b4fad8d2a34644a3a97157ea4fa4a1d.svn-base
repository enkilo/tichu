.TH "sgFont: Font loading and blitting routines" 3 "5 Sep 2006" "Version 2.0.0rc4" "libsgui" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sgFont: Font loading and blitting routines \- 
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBsgFont\fP"
.br
.RI "\fIStructure for a loaded font. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBsgFontType\fP { \fBSG_FONT_NORMAL\fP =  0, \fBSG_FONT_BOLD\fP, \fBSG_FONT_FIXED\fP }"
.br
.RI "\fIFont type enumeration. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBsgInitFonts\fP (void)"
.br
.RI "\fIInitializes the font module. \fP"
.ti -1c
.RI "\fBsgFont\fP * \fBsgLoadFontFile\fP (const char *file)"
.br
.RI "\fILoads a font from a .png file. \fP"
.ti -1c
.RI "\fBsgFont\fP * \fBsgLoadFontRWops\fP (SDL_RWops *rwops)"
.br
.RI "\fILoads a font from an RWops containing a .png file. \fP"
.ti -1c
.RI "\fBsgFont\fP * \fBsgLoadFontFp\fP (FILE *fp)"
.br
.RI "\fILoads a font from a previously opened .png file. \fP"
.ti -1c
.RI "\fBsgFont\fP * \fBsgAddFont\fP (SDL_Surface *font)"
.br
.RI "\fIAdds a new font, getting it from an already loaded surface. \fP"
.ti -1c
.RI "void \fBsgConvertFont\fP (\fBsgFont\fP *font)"
.br
.RI "\fIConverts a font into display format for accelerated blitting. \fP"
.ti -1c
.RI "void \fBsgFreeFont\fP (\fBsgFont\fP *font)"
.br
.RI "\fIFrees a previously loaded font. \fP"
.ti -1c
.RI "void \fBsgFreeFonts\fP (void)"
.br
.RI "\fIFrees all loaded fonts. \fP"
.ti -1c
.RI "void \fBsgDrawChar\fP (\fBsgFont\fP *font, SDL_Color *color, SDL_Surface *dest, Uint16 x, Uint16 y, char c)"
.br
.RI "\fIDraws a single character to a surface. \fP"
.ti -1c
.RI "void \fBsgDrawText\fP (\fBsgFont\fP *font, SDL_Color *color, SDL_Surface *dest, SDL_Rect *rect, int align, const char *text)"
.br
.RI "\fIDraws a text using the specified font. \fP"
.ti -1c
.RI "void \fBsgDrawTextOutline\fP (\fBsgFont\fP *font, SDL_Surface *dest, SDL_Rect *rect, int align, const char *text)"
.br
.RI "\fIDraws a text using the specified font and renders outlines using the blur function. \fP"
.ti -1c
.RI "\fBsgFont\fP * \fBsgGetFirstFont\fP (void)"
.br
.RI "\fIReturns the first font in the list. \fP"
.ti -1c
.RI "int \fBsgTextWidth\fP (\fBsgFont\fP *font, const char *text)"
.br
.RI "\fIGets the width of the specified text using the specified font in pixels. \fP"
.ti -1c
.RI "int \fBsgFontHeight\fP (\fBsgFont\fP *font)"
.br
.RI "\fIGets the height of the specified font in pixels. \fP"
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBsgFontType\fP"
.PP
Font type enumeration. 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fISG_FONT_NORMAL \fP\fP
Used mainly for labels. 
.TP
\fB\fISG_FONT_BOLD \fP\fP
Used for titles and button captions. 
.TP
\fB\fISG_FONT_FIXED \fP\fP
Used for editboxes, listboxes, etc. 
.SH "Function Documentation"
.PP 
.SS "void sgDrawText (\fBsgFont\fP * font, SDL_Color * color, SDL_Surface * dest, SDL_Rect * rect, int align, const char * text)"
.PP
Draws a text using the specified font. 
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP The font in which the text should appear 
.br
\fIcolor\fP Color of the rendered glyphs 
.br
\fIdest\fP Where we will blit the text to 
.br
\fIrect\fP Destination rectnagle 
.br
\fIalign\fP Alignment inside the rectangle 
.br
\fItext\fP The text we'll render
.RE
.PP

.SS "void sgDrawTextOutline (\fBsgFont\fP * font, SDL_Surface * dest, SDL_Rect * rect, int align, const char * text)"
.PP
Draws a text using the specified font and renders outlines using the blur function. 
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP The font in which the text should appear 
.br
\fIdest\fP Where we will blit the text to 
.br
\fIrect\fP Destination rectnagle 
.br
\fIalign\fP Alignment inside the rectangle 
.br
\fItext\fP The text we'll render
.RE
.PP

