.TH "sgListbox: Listbox widget" 3 "5 Sep 2006" "Version 2.0.0rc4" "libsgui" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sgListbox: Listbox widget \- A listbox widget displays a scrollable box which can contain items with a caption and symbols.  

.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBsgListbox\fP"
.br
.RI "\fIDefines a specialised structure for a listbox widget. \fP"
.ti -1c
.RI "struct \fBsgListboxItem\fP"
.br
.RI "\fIAn item of a listbox contains a caption and optionally a surface for symbols. \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBsgListbox\fP(w)   (w)->data.listbox"
.br
.RI "\fIA macro to access listbox specific widget data. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBsgListboxItem\fP \fBsgListboxItem\fP"
.br
.RI "\fIListbox item type. \fP"
.ti -1c
.RI "typedef \fBsgListbox\fP \fBsgListbox\fP"
.br
.RI "\fIData type for listbox specific storage. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewListboxFull\fP (\fBsgWidget\fP *parent, int symbols, const char *caption)"
.br
.RI "\fICreates a new listbox widget with full dialog/group size. \fP"
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewListboxGrouped\fP (\fBsgWidget\fP *group, \fBsgEdge\fP edge, \fBsgAlign\fP align, Uint16 w, Uint16 h, int symbols, const char *caption)"
.br
.RI "\fICreates a new listbox widget and subtracts it from the group rectangle. \fP"
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewListboxAligned\fP (\fBsgWidget\fP *group, \fBsgEdge\fP edge, \fBsgAlign\fP align, Uint16 w, Uint16 h, int symbols, const char *caption)"
.br
.RI "\fICreates a new listbox widget and adds it to the group rectangle while realigning everything. \fP"
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewListbox\fP (\fBsgWidget\fP *parent, Sint16 x, Sint16 y, Uint16 w, Uint16 h, int symbols, const char *caption)"
.br
.RI "\fICreates a new listbox widget. \fP"
.ti -1c
.RI "void \fBsgRedrawListbox\fP (\fBsgWidget\fP *listbox)"
.br
.RI "\fIRedraws listbox look. \fP"
.ti -1c
.RI "void \fBsgRecalcListbox\fP (\fBsgWidget\fP *listbox)"
.br
.RI "\fIRecalcs listbox dimensions. \fP"
.ti -1c
.RI "int \fBsgHandleListboxEvent\fP (\fBsgWidget\fP *listbox, SDL_Event *event)"
.br
.RI "\fIHandles listbox events. \fP"
.ti -1c
.RI "\fBsgListboxItem\fP * \fBsgInsertListboxItem\fP (\fBsgWidget\fP *listbox, int pos, const char *caption, void *value)"
.br
.RI "\fICreate and insert item into listbox at the specified position. \fP"
.ti -1c
.RI "\fBsgListboxItem\fP * \fBsgAddListboxItem\fP (\fBsgWidget\fP *listbox, const char *caption, void *value)"
.br
.RI "\fICreate and append item to a listbox. \fP"
.ti -1c
.RI "void \fBsgDeleteListboxItem\fP (\fBsgWidget\fP *listbox, \fBsgListboxItem\fP *item)"
.br
.RI "\fIDeletes item from listbox. \fP"
.ti -1c
.RI "void \fBsgClearListbox\fP (\fBsgWidget\fP *listbox)"
.br
.RI "\fIDeletes all listbox items. \fP"
.ti -1c
.RI "\fBsgListboxItem\fP * \fBsgGetListboxItem\fP (\fBsgWidget\fP *listbox, int num)"
.br
.RI "\fIGets listbox item by its index. \fP"
.ti -1c
.RI "int \fBsgGetListboxIndex\fP (\fBsgWidget\fP *listbox, \fBsgListboxItem\fP *item)"
.br
.RI "\fIGets the index of the listbox item. \fP"
.ti -1c
.RI "\fBsgListboxItem\fP * \fBsgGetListboxItemByCaption\fP (\fBsgWidget\fP *listbox, const char *caption)"
.br
.RI "\fIGets item by caption. \fP"
.ti -1c
.RI "\fBsgListboxItem\fP * \fBsgGetListboxItemByValue\fP (\fBsgWidget\fP *listbox, void *value)"
.br
.RI "\fIGets item by value. \fP"
.ti -1c
.RI "int \fBsgGetListboxIndexByCaption\fP (\fBsgWidget\fP *listbox, const char *caption)"
.br
.RI "\fIGets item index by caption. \fP"
.ti -1c
.RI "int \fBsgGetListboxIndexByValue\fP (\fBsgWidget\fP *listbox, void *value)"
.br
.RI "\fIGets item index by value. \fP"
.ti -1c
.RI "int \fBsgScrollListbox\fP (\fBsgWidget\fP *listbox, int pos, int force, int setrect)"
.br
.RI "\fIScrolls the listbox to the specified position. \fP"
.ti -1c
.RI "int \fBsgSelectedListboxIndex\fP (\fBsgWidget\fP *listbox)"
.br
.RI "\fIGets the index of the currently selected item of the listbox. \fP"
.ti -1c
.RI "\fBsgListboxItem\fP * \fBsgSelectedListboxItem\fP (\fBsgWidget\fP *listbox)"
.br
.RI "\fIGets the currently selected item of the listbox. \fP"
.ti -1c
.RI "void \fBsgSelectListboxIndex\fP (\fBsgWidget\fP *listbox, int i)"
.br
.RI "\fISets currently selected item by its index. \fP"
.ti -1c
.RI "void \fBsgSelectListboxItem\fP (\fBsgWidget\fP *listbox, \fBsgListboxItem\fP *item)"
.br
.RI "\fISets currently selected item. \fP"
.ti -1c
.RI "void \fBsgSetListboxItemSymbol\fP (\fBsgWidget\fP *listbox, \fBsgListboxItem\fP *item, int i, SDL_Surface *surface)"
.br
.RI "\fISets a symbol for an item. \fP"
.ti -1c
.RI "void \fBsgFreeListbox\fP (\fBsgWidget\fP *listbox)"
.br
.RI "\fIFrees all ressources associated with the listbox. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBsgWidgetType\fP \fBsgListboxType\fP"
.br
.RI "\fIConfiguration and initial methods of the listbox widget. \fP"
.ti -1c
.RI "\fBsgWidgetType\fP \fBsgListboxType\fP"
.br
.RI "\fIConfiguration and initial methods of the listbox widget. \fP"
.in -1c
.SH "Detailed Description"
.PP 
A listbox widget displays a scrollable box which can contain items with a caption and symbols. 
.PP
.SH "Function Documentation"
.PP 
.SS "\fBsgWidget\fP * sgNewListboxFull (\fBsgWidget\fP * parent, int symbols, const char * caption)"
.PP
Creates a new listbox widget with full dialog/group size. 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP group or dialog 
.br
\fIsymbols\fP number of symbols a listbox item contains 
.br
\fIcaption\fP initial listbox text
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created listbox or NULL on error.
.RE
.PP

.SS "\fBsgWidget\fP * sgNewListboxGrouped (\fBsgWidget\fP * group, \fBsgEdge\fP edge, \fBsgAlign\fP align, Uint16 w, Uint16 h, int symbols, const char * caption)"
.PP
Creates a new listbox widget and subtracts it from the group rectangle. 
.PP
\fBParameters:\fP
.RS 4
\fIgroup\fP group the editbox will be added to 
.br
\fIedge\fP at which edge «group» will be splitted 
.br
\fIalign\fP alignment of the listbox inside the group 
.br
\fIw\fP width of the listbox 
.br
\fIh\fP height of the listbox 
.br
\fIsymbols\fP number of symbols a listbox item contains 
.br
\fIcaption\fP initial listbox text
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created listbox or NULL on error.
.RE
.PP

.SS "\fBsgWidget\fP * sgNewListboxAligned (\fBsgWidget\fP * group, \fBsgEdge\fP edge, \fBsgAlign\fP align, Uint16 w, Uint16 h, int symbols, const char * caption)"
.PP
Creates a new listbox widget and adds it to the group rectangle while realigning everything. 
.PP
\fBParameters:\fP
.RS 4
\fIgroup\fP group the editbox will be added to 
.br
\fIedge\fP at which edge «group» will be enhanced 
.br
\fIalign\fP alignment of the listbox inside the group 
.br
\fIw\fP width of the listbox 
.br
\fIh\fP height of the listbox 
.br
\fIsymbols\fP number of symbols a listbox item contains 
.br
\fIcaption\fP initial listbox text
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created listbox or NULL on error.
.RE
.PP

.SS "\fBsgWidget\fP * sgNewListbox (\fBsgWidget\fP * parent, Sint16 x, Sint16 y, Uint16 w, Uint16 h, int symbols, const char * caption)"
.PP
Creates a new listbox widget. 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP widget which will contain the listbox 
.br
\fIx\fP x-position of the listbox relative to the parent 
.br
\fIy\fP y-position of the listbox relative to the parent 
.br
\fIw\fP width of the listbox 
.br
\fIh\fP height of the listbox 
.br
\fIsymbols\fP number of symbols a listbox item contains 
.br
\fIcaption\fP listbox caption
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created listbox or NULL on error.
.RE
.PP

.SS "\fBsgListboxItem\fP * sgInsertListboxItem (\fBsgWidget\fP * listbox, int pos, const char * caption, void * value)"
.PP
Create and insert item into listbox at the specified position. 
.PP
\fBParameters:\fP
.RS 4
\fIlistbox\fP the listbox which will have an item added 
.br
\fIpos\fP insert position 
.br
\fIcaption\fP caption of the new item 
.br
\fIvalue\fP value of the new item
.RE
.PP
\fBReturns:\fP
.RS 4
returns the new item
.RE
.PP

.SS "\fBsgListboxItem\fP * sgAddListboxItem (\fBsgWidget\fP * listbox, const char * caption, void * value)"
.PP
Create and append item to a listbox. 
.PP
\fBParameters:\fP
.RS 4
\fIlistbox\fP the listbox which will have an item added 
.br
\fIcaption\fP caption of the new item 
.br
\fIvalue\fP value of the new item
.RE
.PP
\fBReturns:\fP
.RS 4
returns the new item
.RE
.PP

.SS "\fBsgListboxItem\fP * sgGetListboxItem (\fBsgWidget\fP * listbox, int num)"
.PP
Gets listbox item by its index. 
.PP
\fBParameters:\fP
.RS 4
\fIlistbox\fP the listbox from which we'll get the item 
.br
\fInum\fP index of the wanted item
.RE
.PP
\fBReturns:\fP
.RS 4
returns the wanted item or NULL if not found
.RE
.PP

.SS "int sgGetListboxIndex (\fBsgWidget\fP * listbox, \fBsgListboxItem\fP * item)"
.PP
Gets the index of the listbox item. 
.PP
\fBParameters:\fP
.RS 4
\fIlistbox\fP the listbox from which we'll get the item 
.br
\fIitem\fP the wanted item
.RE
.PP
\fBReturns:\fP
.RS 4
returns index of the supplied item or -1 if not found
.RE
.PP

.SS "\fBsgListboxItem\fP * sgGetListboxItemByCaption (\fBsgWidget\fP * listbox, const char * caption)"
.PP
Gets item by caption. 
.PP
\fBParameters:\fP
.RS 4
\fIlistbox\fP the listbox from which we'll get the item 
.br
\fIcaption\fP caption of the wanted item
.RE
.PP
\fBReturns:\fP
.RS 4
returns the wanted item or NULL if not found
.RE
.PP

.SS "\fBsgListboxItem\fP * sgGetListboxItemByValue (\fBsgWidget\fP * listbox, void * value)"
.PP
Gets item by value. 
.PP
\fBParameters:\fP
.RS 4
\fIlistbox\fP the listbox from which we'll get the item 
.br
\fIvalue\fP value of the wanted item
.RE
.PP
\fBReturns:\fP
.RS 4
returns the wanted item or NULL if not found
.RE
.PP

.SS "int sgGetListboxIndexByCaption (\fBsgWidget\fP * listbox, const char * caption)"
.PP
Gets item index by caption. 
.PP
\fBParameters:\fP
.RS 4
\fIlistbox\fP the listbox from which we'll get the item 
.br
\fIcaption\fP caption of the wanted item
.RE
.PP
\fBReturns:\fP
.RS 4
returns the wanted item index or -1 if not found
.RE
.PP

.SS "int sgGetListboxIndexByValue (\fBsgWidget\fP * listbox, void * value)"
.PP
Gets item index by value. 
.PP
\fBParameters:\fP
.RS 4
\fIlistbox\fP the listbox from which we'll get the item 
.br
\fIvalue\fP value of the wanted item
.RE
.PP
\fBReturns:\fP
.RS 4
returns the wanted item index or -1 if not found
.RE
.PP

.SS "int sgScrollListbox (\fBsgWidget\fP * listbox, int pos, int force, int setrect)"
.PP
Scrolls the listbox to the specified position. 
.PP
\fBParameters:\fP
.RS 4
\fIlistbox\fP the listbox which is scrolled 
.br
\fIpos\fP position index 
.br
\fIforce\fP force scrolling (when the position hasn't changed but the widget size) 
.br
\fIsetrect\fP set new scrollbar rectangle
.RE
.PP
\fBReturns:\fP
.RS 4
returns 1 if the scrolling position was changed or forced and 0 if not
.RE
.PP

.SS "void sgSetListboxItemSymbol (\fBsgWidget\fP * listbox, \fBsgListboxItem\fP * item, int i, SDL_Surface * surface)"
.PP
Sets a symbol for an item. 
.PP
\fBParameters:\fP
.RS 4
\fIlistbox\fP the listbox on which the item is located 
.br
\fIitem\fP item which will be changed 
.br
\fIi\fP symbol index 
.br
\fIsurface\fP symbol surface data
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "\fBsgWidgetType\fP \fBsgListboxType\fP"
.PP
\fBInitial value:\fP
.PP
.nf
 
{
  .name = 'sgListbox',
  .size = sizeof(sgListbox),
  .methods =
  {
    .recalc = sgRecalcListbox,
    .redraw = sgRedrawListbox,
    .handler = sgHandleListboxEvent,
    .blit = sgBlitWidget,
    .delete = sgClearListbox
  }
}
.fi
Configuration and initial methods of the listbox widget. 
.PP

