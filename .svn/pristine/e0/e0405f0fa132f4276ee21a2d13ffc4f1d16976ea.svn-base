<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>libsgui: example01.c</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.4 -->
<div class="qindex"><a class="qindex" href="index.html">Main&nbsp;Page</a> | <a class="qindex" href="modules.html">Modules</a> | <a class="qindex" href="annotated.html">Data&nbsp;Structures</a> | <a class="qindex" href="functions.html">Data&nbsp;Fields</a> | <a class="qindex" href="examples.html">Examples</a></div>
<h1>example01.c</h1><h1>Example 1</h1>
<p>
This example shows the basic look of an sgUI Dialog and demonstrates the moving of a widget using an adjust bar.<p>
<hr>
<p>
<center> <div align="center">
<img src="example01.png" alt="example01.png">
</div>
 </center><p>
<hr>
 The source code: <div class="fragment"><pre class="fragment"><span class="preprocessor">#include &lt;math.h&gt;</span>
<span class="preprocessor">#include &lt;libsgui/sgui.h&gt;</span>
<span class="preprocessor">#include &lt;libsgui/png.h&gt;</span>

<span class="preprocessor">#define RADIUS 54</span>
<span class="preprocessor"></span>
<span class="keyword">static</span> SDL_Surface *screen;
<span class="keyword">static</span> <a name="_a0"></a><a class="code" href="structsgColor.html">sgColor</a>      color;
<span class="keyword">static</span> SDL_Rect     rect1;
<span class="keyword">static</span> SDL_Rect     rect2;
<span class="keyword">static</span> <a name="_a1"></a><a class="code" href="structsgWidget.html">sgWidget</a>    *dialog;
<span class="keyword">static</span> <a class="code" href="structsgWidget.html">sgWidget</a>    *image1;
<span class="keyword">static</span> SDL_Surface *surface1;
<span class="keyword">static</span> <a class="code" href="structsgWidget.html">sgWidget</a>    *adjust1;
<span class="keyword">static</span> <span class="keywordtype">int</span>          radius = RADIUS;

<span class="keywordtype">int</span> handler(<a class="code" href="structsgWidget.html">sgWidget</a> *widget, <a name="a2"></a><a class="code" href="group__sgEvent.html#ga0">sgEvent</a> event)
{
  <span class="keywordflow">switch</span>(event)
  {
    <span class="keywordflow">case</span> <a name="a3"></a><a class="code" href="group__sgEvent.html#gga5a14">SG_EVENT_QUIT</a>:
    {
      <a name="a4"></a><a class="code" href="group__sgWidget.html#ga17">sgClearWidgetStatus</a>(dialog, <a name="a5"></a><a class="code" href="group__sgWidget.html#gga72a12">SG_RUNNING</a>);
      <span class="keywordflow">break</span>;
    }
    
<span class="comment">/*    case SG_EVENT_RESIZE:</span>
<span class="comment">      </span>
<span class="comment">      if(widget == dialog)</span>
<span class="comment">      {</span>
<span class="comment">        rect1 = widget-&gt;rect;</span>
<span class="comment">        </span>
<span class="comment">        screen = SDL_SetVideoMode(rect1.w, rect1.h, 0, </span>
<span class="comment">                                  SDL_HWSURFACE|SDL_DOUBLEBUF|SDL_RESIZABLE);</span>
<span class="comment">      }</span>
<span class="comment"></span>
<span class="comment">      break;*/</span>
    <span class="keywordflow">case</span> <a name="a6"></a><a class="code" href="group__sgEvent.html#gga5a17">SG_EVENT_CHANGE</a>:
    {
      <span class="keywordtype">double</span> pos;
      <span class="keywordtype">int</span> x, y;
      
      <a name="a7"></a><a class="code" href="group__sgAdjust.html#ga13">sgGetAdjustValue</a>(adjust1, &amp;pos);
      
      x = dialog-&gt;<a name="a8"></a><a class="code" href="structsgWidget.html#o14">rect</a>.w / 2 - sin(pos * M_PI / 180) * radius;
      y = dialog-&gt;<a class="code" href="structsgWidget.html#o14">rect</a>.h / 2 - cos(pos * M_PI / 180) * radius;
            
      <a name="a9"></a><a class="code" href="group__sgWidget.html#ga19">sgSetWidgetPos</a>(image1, x, y, <a name="a10"></a><a class="code" href="group__sgCommon.html#gga72a60">SG_ALIGN_CENTER</a>|<a name="a11"></a><a class="code" href="group__sgCommon.html#gga72a64">SG_ALIGN_MIDDLE</a>);
    
      <span class="keywordflow">break</span>;
    }
    
    <span class="keywordflow">default</span>:
    {
      <span class="keywordflow">break</span>;
    }
  }
  
  <span class="keywordflow">return</span> 0;
}

<span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) 
{
  <a name="_a12"></a><a class="code" href="structsgCursorTheme.html">sgCursorTheme</a> *theme;
  
  SDL_Init(SDL_INIT_VIDEO|SDL_INIT_NOPARACHUTE);

  sgInit();

  screen = SDL_SetVideoMode(640, 480, 0, SDL_HWSURFACE|SDL_ANYFORMAT|SDL_DOUBLEBUF);
  
  color.<a name="a13"></a><a class="code" href="structsgColor.html#o0">r</a> = 0xdc;
  color.<a name="a14"></a><a class="code" href="structsgColor.html#o1">g</a> = 0xb5;
  color.<a name="a15"></a><a class="code" href="structsgColor.html#o2">b</a> = 0x1a;
  
  dialog = <a name="a16"></a><a class="code" href="group__sgDialog.html#ga4">sgNewDialog</a>(screen, handler, 4, 128, color, 25);

  <a name="a17"></a><a class="code" href="group__sgWidget.html#ga54">sgLoadWidgetFont</a>(dialog, <a name="a18"></a><a class="code" href="group__sgFont.html#gga14a0">SG_FONT_NORMAL</a>, <span class="stringliteral">"font-bold.png"</span>);

  theme = <a name="a19"></a><a class="code" href="group__sgCursor.html#ga23">sgOpenCursorTheme</a>(<span class="stringliteral">"ghost.cur"</span>);

  <a name="a20"></a><a class="code" href="group__sgDialog.html#ga13">sgSetDialogCursorTheme</a>(dialog, theme);
  
  surface1 = <a name="a21"></a><a class="code" href="group__sgPng.html#ga1">sgLoadPngFile</a>(<span class="stringliteral">"libsgui.png"</span>);

  <span class="keywordflow">if</span>(surface1)
  {
    rect1 = surface1-&gt;clip_rect;
  }
  <span class="keywordflow">else</span>
  {
    rect1.w = 200;
    rect1.h = 200;
  }
  
  <a name="a22"></a><a class="code" href="group__sgCommon.html#ga66">sgAlignRect</a>(&amp;dialog-&gt;<a class="code" href="structsgWidget.html#o14">rect</a>, &amp;rect1, <a class="code" href="group__sgCommon.html#gga72a60">SG_ALIGN_CENTER</a>|<a class="code" href="group__sgCommon.html#gga72a64">SG_ALIGN_MIDDLE</a>);
  
  image1 = <a name="a23"></a><a class="code" href="group__sgImage.html#ga6">sgNewImage</a>(dialog, rect1.x, rect1.y - radius, rect1.w, rect1.h, NULL);
  
  <span class="keywordflow">if</span>(surface1)
  {
    <a name="a24"></a><a class="code" href="group__sgWidget.html#ga22">sgSetWidgetBorder</a>(image1, 0);
    <a name="a25"></a><a class="code" href="group__sgImage.html#ga9">sgSetImageSurface</a>(image1, surface1, <a class="code" href="group__sgCommon.html#gga72a60">SG_ALIGN_CENTER</a>);
  }
  
  <span class="comment">/* Create some buttons */</span>
<span class="comment">/*  button1 = sgNewButton(dialog, rect1.x, rect1.y, rect1.w, rect1.h / 3, "Button");</span>
<span class="comment"></span>
<span class="comment">  button2 = sgNewButton(dialog, rect1.x, rect1.y + rect1.h / 3, rect1.w, rect1.h / 3, "Lala"); */</span>
 
  rect1.y += rect1.h;
  rect1.h = dialog-&gt;<a class="code" href="structsgWidget.html#o14">rect</a>.h - rect1.y;
  rect1.x = 0;
  rect1.w = dialog-&gt;<a class="code" href="structsgWidget.html#o14">rect</a>.w;

  rect2.w = 450;
  rect2.h = 32;
  
  <a class="code" href="group__sgCommon.html#ga66">sgAlignRect</a>(&amp;rect1, &amp;rect2, <a class="code" href="group__sgCommon.html#gga72a60">SG_ALIGN_CENTER</a>|<a class="code" href="group__sgCommon.html#gga72a64">SG_ALIGN_MIDDLE</a>);
  
  adjust1 = <a name="a26"></a><a class="code" href="group__sgAdjust.html#ga6">sgNewAdjustRect</a>(dialog, rect2, 0, 360, <span class="stringliteral">"Angle"</span>);

  <a name="a27"></a><a class="code" href="group__sgAdjust.html#ga11">sgSetAdjustFormat</a>(adjust1, <span class="stringliteral">"%.0lf°"</span>);
  
  <span class="comment">/* Set new dialog color */</span>
  color.<a class="code" href="structsgColor.html#o0">r</a> = 0x7e;
  color.<a class="code" href="structsgColor.html#o1">g</a> = 0x7e;
  color.<a class="code" href="structsgColor.html#o2">b</a> = 0x7e;
  
  <a name="a28"></a><a class="code" href="group__sgWidget.html#ga48">sgSetWidgetColor</a>(dialog, color);
  
  <a name="a29"></a><a class="code" href="group__sgDialog.html#ga11">sgRunDialog</a>(dialog, 0);

  SDL_FillRect(dialog-&gt;<a name="a30"></a><a class="code" href="structsgWidget.html#o5">face</a>.<a name="a31"></a><a class="code" href="structsgWidgetFace.html#o1">frame</a>, NULL, 0);  
  <a name="a32"></a><a class="code" href="group__sgWidget.html#ga16">sgSetWidgetStatus</a>(dialog, <a name="a33"></a><a class="code" href="group__sgWidget.html#gga72a18">SG_REDRAW_FRAME</a>);
    
  <a name="a34"></a><a class="code" href="group__sgDialog.html#ga9">sgBlitDialog</a>(dialog, screen);
  
  <span class="comment">//sgSavePngFile(screen, "test.png");</span>
  
  <span class="comment">/* Shutdown the sgUI library */</span>
  sgQuit();
  
  <span class="comment">/* Shutdown the SDL library */</span>
  SDL_Quit();

  <span class="keywordflow">return</span> 1;
}

</pre></div> <hr>
<p>
<div class="fragment"><pre class="fragment"><span class="preprocessor">#include &lt;math.h&gt;</span>
<span class="preprocessor">#include &lt;libsgui/sgui.h&gt;</span>
<span class="preprocessor">#include &lt;libsgui/png.h&gt;</span>

<span class="preprocessor">#define RADIUS 54</span>
<span class="preprocessor"></span>
<span class="keyword">static</span> SDL_Surface *screen;
<span class="keyword">static</span> <a class="code" href="structsgColor.html">sgColor</a>      color;
<span class="keyword">static</span> SDL_Rect     rect1;
<span class="keyword">static</span> SDL_Rect     rect2;
<span class="keyword">static</span> <a class="code" href="structsgWidget.html">sgWidget</a>    *dialog;
<span class="keyword">static</span> <a class="code" href="structsgWidget.html">sgWidget</a>    *image1;
<span class="keyword">static</span> SDL_Surface *surface1;
<span class="keyword">static</span> <a class="code" href="structsgWidget.html">sgWidget</a>    *adjust1;
<span class="keyword">static</span> <span class="keywordtype">int</span>          radius = RADIUS;

<span class="keywordtype">int</span> handler(<a class="code" href="structsgWidget.html">sgWidget</a> *widget, <a class="code" href="group__sgEvent.html#ga0">sgEvent</a> event)
{
  <span class="keywordflow">switch</span>(event)
  {
    <span class="keywordflow">case</span> <a class="code" href="group__sgEvent.html#gga5a14">SG_EVENT_QUIT</a>:
    {
      <a class="code" href="group__sgWidget.html#ga17">sgClearWidgetStatus</a>(dialog, <a class="code" href="group__sgWidget.html#gga72a12">SG_RUNNING</a>);
      <span class="keywordflow">break</span>;
    }
    
<span class="comment">/*    case SG_EVENT_RESIZE:</span>
<span class="comment">      </span>
<span class="comment">      if(widget == dialog)</span>
<span class="comment">      {</span>
<span class="comment">        rect1 = widget-&gt;rect;</span>
<span class="comment">        </span>
<span class="comment">        screen = SDL_SetVideoMode(rect1.w, rect1.h, 0, </span>
<span class="comment">                                  SDL_HWSURFACE|SDL_DOUBLEBUF|SDL_RESIZABLE);</span>
<span class="comment">      }</span>
<span class="comment"></span>
<span class="comment">      break;*/</span>
    <span class="keywordflow">case</span> <a class="code" href="group__sgEvent.html#gga5a17">SG_EVENT_CHANGE</a>:
    {
      <span class="keywordtype">double</span> pos;
      <span class="keywordtype">int</span> x, y;
      
      <a class="code" href="group__sgAdjust.html#ga13">sgGetAdjustValue</a>(adjust1, &amp;pos);
      
      x = dialog-&gt;<a class="code" href="structsgWidget.html#o14">rect</a>.w / 2 - sin(pos * M_PI / 180) * radius;
      y = dialog-&gt;<a class="code" href="structsgWidget.html#o14">rect</a>.h / 2 - cos(pos * M_PI / 180) * radius;
            
      <a class="code" href="group__sgWidget.html#ga19">sgSetWidgetPos</a>(image1, x, y, <a class="code" href="group__sgCommon.html#gga72a60">SG_ALIGN_CENTER</a>|<a class="code" href="group__sgCommon.html#gga72a64">SG_ALIGN_MIDDLE</a>);
    
      <span class="keywordflow">break</span>;
    }
    
    <span class="keywordflow">default</span>:
    {
      <span class="keywordflow">break</span>;
    }
  }
  
  <span class="keywordflow">return</span> 0;
}

<span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) 
{
  <a class="code" href="structsgCursorTheme.html">sgCursorTheme</a> *theme;
  
  SDL_Init(SDL_INIT_VIDEO|SDL_INIT_NOPARACHUTE);

  sgInit();

  screen = SDL_SetVideoMode(640, 480, 0, SDL_HWSURFACE|SDL_ANYFORMAT|SDL_DOUBLEBUF);
  
  color.<a class="code" href="structsgColor.html#o0">r</a> = 0xdc;
  color.<a class="code" href="structsgColor.html#o1">g</a> = 0xb5;
  color.<a class="code" href="structsgColor.html#o2">b</a> = 0x1a;
  
  dialog = <a class="code" href="group__sgDialog.html#ga4">sgNewDialog</a>(screen, handler, 4, 128, color, 25);

  <a class="code" href="group__sgWidget.html#ga54">sgLoadWidgetFont</a>(dialog, <a class="code" href="group__sgFont.html#gga14a0">SG_FONT_NORMAL</a>, <span class="stringliteral">"font-bold.png"</span>);

  theme = <a class="code" href="group__sgCursor.html#ga23">sgOpenCursorTheme</a>(<span class="stringliteral">"ghost.cur"</span>);

  <a class="code" href="group__sgDialog.html#ga13">sgSetDialogCursorTheme</a>(dialog, theme);
  
  surface1 = <a class="code" href="group__sgPng.html#ga1">sgLoadPngFile</a>(<span class="stringliteral">"libsgui.png"</span>);

  <span class="keywordflow">if</span>(surface1)
  {
    rect1 = surface1-&gt;clip_rect;
  }
  <span class="keywordflow">else</span>
  {
    rect1.w = 200;
    rect1.h = 200;
  }
  
  <a class="code" href="group__sgCommon.html#ga66">sgAlignRect</a>(&amp;dialog-&gt;<a class="code" href="structsgWidget.html#o14">rect</a>, &amp;rect1, <a class="code" href="group__sgCommon.html#gga72a60">SG_ALIGN_CENTER</a>|<a class="code" href="group__sgCommon.html#gga72a64">SG_ALIGN_MIDDLE</a>);
  
  image1 = <a class="code" href="group__sgImage.html#ga6">sgNewImage</a>(dialog, rect1.x, rect1.y - radius, rect1.w, rect1.h, NULL);
  
  <span class="keywordflow">if</span>(surface1)
  {
    <a class="code" href="group__sgWidget.html#ga22">sgSetWidgetBorder</a>(image1, 0);
    <a class="code" href="group__sgImage.html#ga9">sgSetImageSurface</a>(image1, surface1, <a class="code" href="group__sgCommon.html#gga72a60">SG_ALIGN_CENTER</a>);
  }
  
  <span class="comment">/* Create some buttons */</span>
<span class="comment">/*  button1 = sgNewButton(dialog, rect1.x, rect1.y, rect1.w, rect1.h / 3, "Button");</span>
<span class="comment"></span>
<span class="comment">  button2 = sgNewButton(dialog, rect1.x, rect1.y + rect1.h / 3, rect1.w, rect1.h / 3, "Lala"); */</span>
 
  rect1.y += rect1.h;
  rect1.h = dialog-&gt;<a class="code" href="structsgWidget.html#o14">rect</a>.h - rect1.y;
  rect1.x = 0;
  rect1.w = dialog-&gt;<a class="code" href="structsgWidget.html#o14">rect</a>.w;

  rect2.w = 450;
  rect2.h = 32;
  
  <a class="code" href="group__sgCommon.html#ga66">sgAlignRect</a>(&amp;rect1, &amp;rect2, <a class="code" href="group__sgCommon.html#gga72a60">SG_ALIGN_CENTER</a>|<a class="code" href="group__sgCommon.html#gga72a64">SG_ALIGN_MIDDLE</a>);
  
  adjust1 = <a class="code" href="group__sgAdjust.html#ga6">sgNewAdjustRect</a>(dialog, rect2, 0, 360, <span class="stringliteral">"Angle"</span>);

  <a class="code" href="group__sgAdjust.html#ga11">sgSetAdjustFormat</a>(adjust1, <span class="stringliteral">"%.0lf°"</span>);
  
  <span class="comment">/* Set new dialog color */</span>
  color.<a class="code" href="structsgColor.html#o0">r</a> = 0x7e;
  color.<a class="code" href="structsgColor.html#o1">g</a> = 0x7e;
  color.<a class="code" href="structsgColor.html#o2">b</a> = 0x7e;
  
  <a class="code" href="group__sgWidget.html#ga48">sgSetWidgetColor</a>(dialog, color);
  
  <a class="code" href="group__sgDialog.html#ga11">sgRunDialog</a>(dialog, 0);

  SDL_FillRect(dialog-&gt;<a class="code" href="structsgWidget.html#o5">face</a>.<a class="code" href="structsgWidgetFace.html#o1">frame</a>, NULL, 0);  
  <a class="code" href="group__sgWidget.html#ga16">sgSetWidgetStatus</a>(dialog, <a class="code" href="group__sgWidget.html#gga72a18">SG_REDRAW_FRAME</a>);
    
  <a class="code" href="group__sgDialog.html#ga9">sgBlitDialog</a>(dialog, screen);
  
  <span class="comment">//sgSavePngFile(screen, "test.png");</span>
  
  <span class="comment">/* Shutdown the sgUI library */</span>
  sgQuit();
  
  <span class="comment">/* Shutdown the SDL library */</span>
  SDL_Quit();

  <span class="keywordflow">return</span> 1;
}

</pre></div> <hr size="1"><address style="align: right;"><small>Generated on Tue Sep 5 16:20:38 2006 for libsgui by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.4 </small></address>
</body>
</html>
