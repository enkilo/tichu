.TH "sgColorSel: ColorSel bar widget" 3 "5 Sep 2006" "Version 2.0.0rc4" "libsgui" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sgColorSel: ColorSel bar widget \- The adjust bar widget consists of a title, a caption, a ruler and a knob.  

.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBsgColorSel\fP"
.br
.RI "\fIspecialised structure for an color select widget \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBsgColorSel\fP(w)   (w)->data.colorsel"
.br
.RI "\fImacro to access the specialised color select structure \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBsgColorSelMode\fP \fBsgColorSelMode\fP"
.br
.RI "\fIColor select mode type. \fP"
.ti -1c
.RI "typedef \fBsgColorSel\fP \fBsgColorSel\fP"
.br
.RI "\fIdata type for widget-specific storage \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBsgColorSelMode\fP { \fBSG_COLORSEL_HUE\fP, \fBSG_COLORSEL_SATURATION\fP, \fBSG_COLORSEL_VALUE\fP }"
.br
.RI "\fIColor select mode. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewColorSelSplitted\fP (\fBsgWidget\fP *based, \fBsgEdge\fP edge, Uint16 pixels, \fBsgColorSelMode\fP mode, const char *caption)"
.br
.RI "\fICreates a new color selection widget by splitting another. \fP"
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewColorSelGrouped\fP (\fBsgWidget\fP *group, \fBsgEdge\fP edge, \fBsgAlign\fP align, Uint16 w, Uint16 h, \fBsgColorSelMode\fP mode, const char *caption)"
.br
.RI "\fICreates a new color selection widget and subtracts it from a group. \fP"
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewColorSelAligned\fP (\fBsgWidget\fP *group, \fBsgEdge\fP edge, \fBsgAlign\fP align, Uint16 w, Uint16 h, \fBsgColorSelMode\fP mode, const char *caption)"
.br
.RI "\fICreates a new color selection widget and adds it to a group. \fP"
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewColorSelRect\fP (\fBsgWidget\fP *parent, SDL_Rect rect, \fBsgColorSelMode\fP mode, const char *caption)"
.br
.RI "\fICreates a new color selection widget from a rectangle. \fP"
.ti -1c
.RI "\fBsgWidget\fP * \fBsgNewColorSel\fP (\fBsgWidget\fP *parent, Sint16 x, Sint16 y, Uint16 w, Uint16 h, \fBsgColorSelMode\fP mode, const char *caption)"
.br
.RI "\fICreates a new color selection widget. \fP"
.ti -1c
.RI "void \fBsgRecalcColorSel\fP (\fBsgWidget\fP *colorsel)"
.br
.RI "\fICalculates internal widget dimensions. \fP"
.ti -1c
.RI "void \fBsgRedrawColorSel\fP (\fBsgWidget\fP *colorsel)"
.br
.RI "\fIRedraws colorsel widget faces. \fP"
.ti -1c
.RI "int \fBsgHandleColorSelEvent\fP (\fBsgWidget\fP *colorsel, SDL_Event *event)"
.br
.RI "\fIHandles an incoming event for the colorsel bar widget. \fP"
.ti -1c
.RI "int \fBsgSetColorSelPos\fP (\fBsgWidget\fP *colorsel, int pos)"
.br
.RI "\fISets the position of the colorsel bar knob. \fP"
.ti -1c
.RI "int \fBsgGetColorSelPos\fP (\fBsgWidget\fP *colorsel, int *pos)"
.br
.RI "\fIGets the position of the colorsel bar knob. \fP"
.ti -1c
.RI "int \fBsgBlitColorSel\fP (\fBsgWidget\fP *colorsel, SDL_Surface *surface, Sint16 x, Sint16 y)"
.br
.RI "\fIBlit a color selection widget. \fP"
.ti -1c
.RI "\fBsgColor\fP \fBsgGetColorSelRGB\fP (\fBsgWidget\fP *colorsel)"
.br
.RI "\fIGet the color of the color select widget (RGB). \fP"
.ti -1c
.RI "void \fBsgSetColorSelRGB\fP (\fBsgWidget\fP *colorsel, \fBsgColor\fP rgb)"
.br
.RI "\fISet the color of the color select widget (RGB). \fP"
.ti -1c
.RI "\fBsgHSV\fP \fBsgGetColorSelHSV\fP (\fBsgWidget\fP *colorsel)"
.br
.RI "\fIGet the color of the color select widget (HSV). \fP"
.ti -1c
.RI "void \fBsgSetColorSelHSV\fP (\fBsgWidget\fP *colorsel, \fBsgHSV\fP hsv)"
.br
.RI "\fISet the color of the color select widget (HSV). \fP"
.ti -1c
.RI "void \fBsgSetColorSelHue\fP (\fBsgWidget\fP *colorsel, Uint8 hue)"
.br
.RI "\fISet the hue value of the color select widget. \fP"
.ti -1c
.RI "void \fBsgSetColorSelSaturation\fP (\fBsgWidget\fP *colorsel, Uint8 saturation)"
.br
.RI "\fISet the saturation value of the color select widget. \fP"
.ti -1c
.RI "void \fBsgSetColorSelValue\fP (\fBsgWidget\fP *colorsel, Uint8 value)"
.br
.RI "\fISet the value of the color select widget. \fP"
.ti -1c
.RI "Uint8 \fBsgGetColorSelHue\fP (\fBsgWidget\fP *colorsel)"
.br
.RI "\fIGet the hue value of the color select widget. \fP"
.ti -1c
.RI "Uint8 \fBsgGetColorSelSaturation\fP (\fBsgWidget\fP *colorsel)"
.br
.RI "\fIGet the saturation value of the color select widget. \fP"
.ti -1c
.RI "Uint8 \fBsgGetColorSelValue\fP (\fBsgWidget\fP *colorsel)"
.br
.RI "\fIGet the value of the color select widget. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBsgWidgetType\fP \fBsgColorSelType\fP"
.br
.RI "\fIColorSel widget type. \fP"
.ti -1c
.RI "\fBsgWidgetType\fP \fBsgColorSelType\fP"
.br
.RI "\fIColorSel widget type. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The adjust bar widget consists of a title, a caption, a ruler and a knob. 
.PP
The knob can be moved in the range of the ruler, while the position (which is represented by the caption of the widget) is scaled from \fIruler width\fP to \fIrange\fP, which means it is always a value from 0 to \fIrange\fP.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBsgColorSelMode\fP"
.PP
Color select mode. 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fISG_COLORSEL_HUE \fP\fP
Adjust the hue channel. 
.TP
\fB\fISG_COLORSEL_SATURATION \fP\fP
Adjust the saturation channel. 
.TP
\fB\fISG_COLORSEL_VALUE \fP\fP
Adjust the value channel. 
.SH "Function Documentation"
.PP 
.SS "\fBsgWidget\fP * sgNewColorSelSplitted (\fBsgWidget\fP * based, \fBsgEdge\fP edge, Uint16 pixels, \fBsgColorSelMode\fP mode, const char * caption)"
.PP
Creates a new color selection widget by splitting another. 
.PP
\fBParameters:\fP
.RS 4
\fIbased\fP widget which we split 
.br
\fIedge\fP at which edge «based» will be splitted 
.br
\fIpixels\fP how many pixels to splitt off 
.br
\fImode\fP color selection mode 
.br
\fIcaption\fP caption of the widget
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created widget or NULL on error.
.RE
.PP

.SS "\fBsgWidget\fP * sgNewColorSelGrouped (\fBsgWidget\fP * group, \fBsgEdge\fP edge, \fBsgAlign\fP align, Uint16 w, Uint16 h, \fBsgColorSelMode\fP mode, const char * caption)"
.PP
Creates a new color selection widget and subtracts it from a group. 
.PP
\fBParameters:\fP
.RS 4
\fIgroup\fP group the widget will be added to 
.br
\fIedge\fP at which edge «group» will be splitted 
.br
\fIalign\fP alignment of the widget inside the group 
.br
\fIw\fP width of the widget 
.br
\fIh\fP height of the widget 
.br
\fImode\fP color selection mode 
.br
\fIcaption\fP caption of the widget
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created widget or NULL on error.
.RE
.PP

.SS "\fBsgWidget\fP * sgNewColorSelAligned (\fBsgWidget\fP * group, \fBsgEdge\fP edge, \fBsgAlign\fP align, Uint16 w, Uint16 h, \fBsgColorSelMode\fP mode, const char * caption)"
.PP
Creates a new color selection widget and adds it to a group. 
.PP
\fBParameters:\fP
.RS 4
\fIgroup\fP group the widget will be added to 
.br
\fIedge\fP at which edge «group» will be enhanced 
.br
\fIalign\fP alignment of the widget inside the group 
.br
\fIw\fP width of the widget 
.br
\fIh\fP height of the widget 
.br
\fImode\fP color selection mode 
.br
\fIcaption\fP caption of the widget
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the newly created widget or NULL on error.
.RE
.PP

.SS "\fBsgWidget\fP * sgNewColorSelRect (\fBsgWidget\fP * parent, SDL_Rect rect, \fBsgColorSelMode\fP mode, const char * caption)"
.PP
Creates a new color selection widget from a rectangle. 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP parent the widget will be added to 
.br
\fIrect\fP position and dimensions of the widget relative to the parent 
.br
\fImode\fP color selection mode 
.br
\fIcaption\fP caption of the color select widget
.RE
.PP
\fBReturns:\fP
.RS 4
A pointer to the newly created widget or NULL on error.
.RE
.PP

.SS "\fBsgWidget\fP * sgNewColorSel (\fBsgWidget\fP * parent, Sint16 x, Sint16 y, Uint16 w, Uint16 h, \fBsgColorSelMode\fP mode, const char * caption)"
.PP
Creates a new color selection widget. 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP parent the widget will be added to 
.br
\fIx\fP x-position of the widget relative to the parent 
.br
\fIy\fP y-Position of the widget relative to the parent 
.br
\fIw\fP width of the widget 
.br
\fIh\fP height of the widget 
.br
\fImode\fP color selection mode 
.br
\fIcaption\fP caption of the color select widget
.RE
.PP
\fBReturns:\fP
.RS 4
A pointer to the newly created widget or NULL on error.
.RE
.PP

.SS "void sgRecalcColorSel (\fBsgWidget\fP * colorsel)"
.PP
Calculates internal widget dimensions. 
.PP
\fBParameters:\fP
.RS 4
\fIcolorsel\fP The colorsel bar widget to recalculate
.RE
.PP

.SS "void sgRedrawColorSel (\fBsgWidget\fP * colorsel)"
.PP
Redraws colorsel widget faces. 
.PP
\fBParameters:\fP
.RS 4
\fIcolorsel\fP The colorsel bar widget to draw
.RE
.PP

.SS "int sgHandleColorSelEvent (\fBsgWidget\fP * colorsel, SDL_Event * event)"
.PP
Handles an incoming event for the colorsel bar widget. 
.PP
\fBParameters:\fP
.RS 4
\fIcolorsel\fP The colorsel bar widget which receives the event 
.br
\fIevent\fP An SDL_Event structure from SDL_PollEvent()
.RE
.PP
\fBReturns:\fP
.RS 4
1 if some action has taken place, 0 otherwise
.RE
.PP

.SS "int sgSetColorSelPos (\fBsgWidget\fP * colorsel, int pos)"
.PP
Sets the position of the colorsel bar knob. 
.PP
\fBParameters:\fP
.RS 4
\fIcolorsel\fP The colorsel bar widget which will have its position changed 
.br
\fIpos\fP A value from 0 to «range»
.RE
.PP
\fBReturns:\fP
.RS 4
Returns 1 when the value has changed, 0 otherwise
.RE
.PP

.SS "int sgGetColorSelPos (\fBsgWidget\fP * colorsel, int * pos)"
.PP
Gets the position of the colorsel bar knob. 
.PP
\fBParameters:\fP
.RS 4
\fIcolorsel\fP The colorsel bar widget of which the position is requested 
.br
\fIpos\fP A pointer to integer value which will receive the current position or NULL
.RE
.PP
\fBReturns:\fP
.RS 4
The current knob position
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "\fBsgWidgetType\fP \fBsgColorSelType\fP"
.PP
\fBInitial value:\fP
.PP
.nf

{
  .name = 'sgColorSel', 
  .size = sizeof(sgColorSel),
  .methods =
  {
    .recalc = sgRecalcColorSel,
    .redraw = sgRedrawColorSel,
    .handler = sgHandleColorSelEvent,
    .blit = sgBlitColorSel
  }
}
.fi
ColorSel widget type. 
.PP

